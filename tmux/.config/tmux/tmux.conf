# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# split panes using | and -
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# switch panes using h/j/k/l and prefix
bind h select-pane -L
bind l select-pane -R
bind k select-pane -U
bind j select-pane -D

bind -n M-h if-shell -F "#{m:*vim*, #{pane_current_command}}" 'send-keys M-h' 'select-pane -L'
bind -n M-l if-shell -F "#{m:*vim*, #{pane_current_command}}" 'send-keys M-l' 'select-pane -R'
bind -n M-k if-shell -F "#{m:*vim*, #{pane_current_command}}" 'send-keys M-k' 'select-pane -U'
bind -n M-j if-shell -F "#{m:*vim*, #{pane_current_command}}" 'send-keys M-j' 'select-pane -D'

bind -n S-Left previous-window
bind -n S-Right next-window

# switch to last like in vim
bind ^ last-window

# Allow colors and termguicolors
set -g default-terminal "tmux-256color"   # if set to xterm-256color, <Home> and <End> don't work
set -ga terminal-overrides ",*256col*:Tc"

set -g mouse on

set-option -s set-clipboard off
set-option -s focus-events on

set-window-option -g word-separators ' "()[]{}!@#$%^&*'
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection

# copy, but no cancel (i.e. go back to scroll mode)
%if "$IS_WSL"
    bind-key -T copy-mode-vi y send-keys -X copy-pipe 'clip.exe'
%else
    bind-key -T copy-mode-vi y send-keys -X copy-pipe 'xclip -selection clipboard'
%endif

bind-key -T copy-mode-vi C-r command-prompt -i -I "#{pane_search_string}" -p "(search up)" "send -X search-backward-incremental \"%%%\""

# mouse drag only selects area, does not copy
unbind -T copy-mode-vi MouseDragEnd1Pane

# bind-key j command-prompt -p "join pane from:" "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:" "join-pane -t '%%'"

# move pane to new window
# bind-key b break-pane
# i can already use prefix + `!` to do this

# double click in normal-mode to select-word if mouse is not being used by other application (most prob. vim)
bind-key -n DoubleClick1Pane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= \"#{pane_in_mode}\" \"send -X select-word\" \"copy-mode \; send -X select-word\""

# There is a delay in sending <esc> key, this ends that
set -s escape-time 0

LESS='--mouse -R' # allows mouse scroll inside tmux, -R allows color display by `git diff` etc

# remove unnecessary pane title on bottom bar, instead show the current-mode
set -g status-right "#[fg=#61AFEF]\"#{?pane_in_mode,#{pane_mode},normal-mode}\"  #[fg=#d19a66]%H:%M %d-%b-%y"

set-option -g allow-rename off

set-option -g renumber-windows on

# Allow tmux to change terminal titles
set-option -g set-titles on

# change cursor shape depending on mode, like in neovim
set-hook -g pane-mode-changed "source-file $XDG_CONFIG_HOME/tmux/tmux-cursor.conf"
# set-hook -g after-select-pane  "source-file ~/.tmux-cursor.conf"
# set-hook -g after-select-window  "source-file ~/.tmux-cursor.conf"
# set-hook -g after-split-window "source-file ~/.tmux-cursor.conf"
# set-hook -g after-new-window "source-file ~/.tmux-cursor.conf"
set-hook -g pane-focus-in "source-file $XDG_CONFIG_HOME/tmux/tmux-cursor.conf"

bind-key v "source-file $XDG_CONFIG_HOME/tmux/tmux-cursor.conf"

bind-key i "neww 'tmux set -q remain-on-exit;cht.sh'"

# Appearance of status bar

set-option -g status-style  'fg=#abb2bf,bg=#1e1e1e'
set-option -w -g window-status-current-style 'fg=black,bg=#dedede,bold'
# set-option -g window-status-format ' #{window_index}:#{window_name}'
# set-option -w -g window-status-current-format '#[bg=#dedede,fg=#1e1e1e]#[fg=black,bg=#dedede,bold]#{window_index}:#{window_name}#[fg=#dedede,bg=#1e1e1e]'


# put tmux status-line on top
set-option -g status-position top

# https://github.com/folke/lsp-colors.nvim#making-undercurls-work-properly-in-tmux
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# set-option -g default-shell /bin/bash
# set-option -g default-command /bin/bash
